{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAwCeA,EAnCM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAmBxC,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCVjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,8DAEDI,MAAOF,GAFN,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCERO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECAd,SAAEA,GAAgB,IAAD,EAEfd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAkBzC,OAXAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDhB6BK,CAAc1B,GAApC2B,EAFwB,EAE9BpB,KAAgBa,EAFc,EAEdA,QAGxB,OACI,qCACI,qBAAIJ,UAAU,sDAAd,UACI,gDADJ,IACkChB,KAGhCoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAEQW,EAASlB,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAESA,GADCA,EAAIC,aElBzBiB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAcA,cAAgBA,IAC9B,uBAGA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAS,OACrB,cAAC,EAAD,CAEIA,UAAWA,GADLA,YCdlC8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.ebe48612.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst AddCategoria = ( {setCategorias} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    // onChange Input\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias( cats => [inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategoria;\r\n\r\n"," // Obtiene gifs.\r\n export const getGifs = async (categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=5&api_key=L8IKMEkVVgxe0q1QcdLg4nuBw1DAT8ti`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\n// Este componente muestra la imagen y su titulo\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft animate__slow\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {categoria} ) => {\r\n\r\n    const { data: imagenes, loading } = useFetchGifs( categoria );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInLeft animate__slow\">\r\n                <strong>Categoria:</strong> { categoria }\r\n            </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                { \r\n                    imagenes.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img } \r\n                        />\r\n                ))\r\n                }\r\n            </div>\r\n        </>\r\n       \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n// Custom hook , retorna un estado inicial que carga las imagenes (gifs).\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        //? Se ejecuta solo cuando el Componente es renderizado por primera vez\r\n        getGifs( categoria )\r\n            .then( imgs  => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [categoria]) //? Se dispara nuevamente cuando la categoria cambia\r\n\r\n    return state; // { data: [] , loading: true };\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategoria from './components/AddCategoria';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['One punch']);\r\n\r\n    return (\r\n        <div>\r\n            <h1>GifExpertApp</h1>\r\n            <AddCategoria setCategorias={ setCategorias }/>\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( categoria => (\r\n                        <GifGrid \r\n                            key={ categoria } \r\n                            categoria={categoria}\r\n                        />\r\n                    \r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root')\n);\n"],"sourceRoot":""}